12/8　第一案
オカンにはprintしか伝わらず･･･もっと細かくわかりやすくした方がいいかもしれん
出力
　    System.out.print();
　の()の中に書いたものが表示されます。
　例えば、
　    System.out.print(1);
　と書けば、「1」が表示され、
　    System.out.print("あ");
　と書けば、「あ」が表示されます。また、
　    System.out.println();
　と書けば、()の中が表示された後に改行されます。

変数
　変数とは箱のようなもので、中に色々なものを入れることができます。変数は、
　    型 変数名;
　というように書くことで使うことができます。この型とは、箱の中に入れるものの種類であり、例えば「String」、「int」、「boolean」などがあります。Stringは文字列、intは整数、booleanは真偽を表します。
　    int x;
　と書けば、「xという名前の箱は整数(int)を入れることができる」という意味になります。続けて、
　    x = 1;
　と書けば、「xという名前の箱に1を入れる」という意味になり、これを代入といいます。更に続けて、
　    int y = 2;
　    x = y;
　と書けば、「yという名前の箱は整数(int)を入れることができ、中に2を入れる」となり、「xという名前の箱にyという箱を入れる」となります。つまり、xには1が入っていましたが、上書きされて2が入るということです。しかし、
　    x = "あ";
　のように、種類の違うのものは入れることができません。「"あ"」とは文字列であり、String型ですので、
　    String z = "あ";
　のように書けば問題ありません。最後にboolean型は、「true」(真)と「false」(偽)の2種類しか入れることのできない変数です。

演算子・不等号・不等価
　変数は計算することができ、例えば、
　    int x = 2;
　    int y = x + 3;
　と書けば、yは2+3で5になる。ほかにも引き算や掛け算、割り算などもできます。また、
　    boolean z = 2 > 1;
　と書くとどうなるというと、まず「2 > 1」は正しいので「真(true)」となります。つまりこのboolean型のzには「true」が入ります。
　    boolean z = 2 < 1;
　であれば間違っているので「偽(false)」となり、zには「false」が入ります。また、「==」とは等号を表し、「!=」は不等号を表します。つまり、
　    boolean z = 1 == 1;
　と書けば「1と1は等しい」という意味であり、正しいので「true」となります。
　    boolean z = 1 != 1;
　であれば「1と1は等しくない」という意味であり、間違っているので「false」となります。

論理演算子
　論理演算子は「&&」(かつ)、「||」(または)、「!」(否定)があります。&&は左と右のものがどちらもtrueであれば、trueになるものです。例えば、
　    A && B
　といった感じに書き、「AかつB」という意味になります。これは「AとBの両方がtrueであればtrue、でなければfalse」ということです。具体的には、
　    boolean x = true;
　    boolean y = true;
　    boolean z = x && y;
　と書けば、xとyが両方ともtrueですので、zはtrueになります。||は左と右のどちらかがtrueであれば、trueになるものです。例えば、
　    A || B
　といった感じに書き、「AまたはB」という意味になります。これは「AとBのどちらか一方でもtrueであればtrue、でなければfalse」ということです。具体的には、
　    boolean x = false;
　    boolean y = true;
　    boolean z = x || y;
　と書けば、xはfalseですが、yがtrueですのでzはtrueになります。!は右にあるものを否定します。つまり、trueとfalseを入れ替えます。例えば、
　    !A
　といった感じに書き、「Aを否定する」という意味になります。これは「Aがtrueであればfalseになり、falseであればtrueになる」ということです。具体的には、
　    boolean x = false;
　    boolean y = !x;
　と書けば、yはxを否定したものであり、xはfalseですので、yはtrueになります。

条件分岐
　if文というのがあり、特定の条件を満たすと特定の処理を行うというものがあります。
　    if(条件式) {
　        処理;
　    }
　といった感じに書き、条件式の条件を満たすと{}で囲まれた中身の処理を実行するというものです。具体的には、
　    int x = 2;
　    if(x > 1) {
　        System.out.print(1);
　    }
　と書けば、xは2であるため条件式は、「2 > 1」となり、1より大きいという条件を満たしているので中身の処理が実行されます。つまり「1」と表示されるわけです。また、
　    if(条件式A) {
　        処理A;
　    } else if(条件式B) {
　        処理B;
　    } else if(条件式C) {
　        処理C;
　    } else {
　        処理D;
　    }
　と書くと、1つめは先程と同じく条件式Aという条件を満たすと処理Aを実行しますが、2つめは前までの条件を満たさない、かつこの条件を満たすという意味です。つまり条件式Aを満たさない、かつ条件式Bを満たすときに処理Bを実行するということです。3つめも前までの条件を満たさない、かつこの条件を満たすという意味です。つまり条件式Aを満たさない、かつ条件式Bを満たさない、かつ条件式Cを満たすときに処理Cを実行するということです。最後は前までの条件をどれも満たさないという意味です。つまり条件式A、条件式B、条件式Cのすべてを満たさないときに処理Dを実行するということです。

繰り返し処理(for文)
　繰り返し処理にはfor制御文というのがあり、決まった回数だけ同じ処理を繰り返すというものがあります。
　    for(int i = 0; i < 回数; i++) {
　        処理;
　    }
　といった感じに書き、回数の数だけ処理を繰り返し実行します。具体的には、
　    for(int i = 0; i < 3; i++) {
　        System.out.print(1);
　    }
　と書けば、「1を表示する」という処理を3回繰り返すことになるので、実行結果は「111」となる訳です。
　    for(int i = 0; i < 5; i++) {
　        System.out.print(1);
　    }
　と書けば、5回繰り返すことになるので、実行結果は「11111」となります。

乱数
　乱数とはランダムな数字のことであり、プログラミングではこの乱数を使うことができます。
　    import java.util.Random;
　    Random random = new Random();
　    int x = random.nextInt(6);
　といった感じで書き、この場合、xには0～5までのランダムな数字が入ります。もしも3行目を
　    int x = random.nextInt(10);
　とすれば、xには0～9までのランダムな数字が入ります。

入力
　これまでのプログラミングではプログラムの中に書いたことのみで完結していましたが、あとから行った入力をプログラムの中で使うということができます。そのひとつの方法がScannerです。
　    import java.util.Scanner;
　    Scanner scanner = new Scanner(System.in);
　    int x = scanner.next();
　といった感じに書き、実行したあとに数字を入力することができます。例えば「1」と入力すればxには1が入ります。


**********************************************


変数
　変数とは箱のようなもので、中に色々なものを入れることができます。変数は、
　    型 変数名;
　というように書くことで使うことができます。この型とは、箱の中に入れるものの種類であり、例えば「String」、「int」、「boolean」などがあります。Stringは文字列、intは整数、booleanは真偽を表します。
　    int x;
　と書けば、「xという名前の箱は整数(int)を入れることができる」という意味になります。続けて、
　    x = 1;
　と書けば、「xという名前の箱に1を入れる」という意味になり、これを代入といいます。更に続けて、
　    int y = 2;
　    x = y;
　と書けば、「yという名前の箱は整数(int)を入れることができ、中に2を入れる」となり、「xという名前の箱にyという箱を入れる」となります。つまり、xには1が入っていましたが、上書きされて2が入るということです。しかし、
　    x = "あ";
　のように、種類の違うのものは入れることができません。「"あ"」とは文字列であり、String型ですので、
　    String z = "あ";
　のように書けば問題ありません。最後にboolean型は、「true」(真)と「false」(偽)の2種類しか入れることのできない変数です。

第二案
変数
　変数とは箱のようなもので、中に色々なものを入れることができます。具体的には、「あいうえお」みたいな文字列や「13」のような数字などを入れることができます。
　型
　　型とは変数の中身の種類のことです。変数を作るには、
　　    型 変数名;
　　というように書くことでできます。
　代入
　　